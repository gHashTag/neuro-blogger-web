// üé¨ Video Frame Context - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –≤–∏–¥–µ–æ
// –ê–Ω–∞–ª–æ–≥ VideoFrameContext –∏–∑ Promo-Video-Beta –ø—Ä–æ–µ–∫—Ç–∞

"use client";
import React, { createContext, useContext, useState, ReactNode } from "react";

// üéØ –¢–∏–ø—ã –¥–ª—è –≤–∏–¥–µ–æ –∫–∞–¥—Ä–æ–≤ (–∏–∑ Promo-Video-Beta)
export interface VideoFrame {
  animation: string; // "fadeIn", "slideUp", "zoomIn", "slideRight"
  bgColor: string; // "#007AFF" –∏–ª–∏ "linear-gradient(...)"
  duration: number; // –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
  fontFamily: string; // "Outfit", "Bungee", "Anton", "Rowdies"
  fontSize: number;
  image?: string; // –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
  sticker?: string; // URL —ç–º–æ–¥–∑–∏ —Å—Ç–∏–∫–µ—Ä–∞
  stickerSize?: number;
  text: string;
  textColor: string; // "rgba(255,255,255,1)"
}

// üé¨ –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤–∏–¥–µ–æ –¥–∞–Ω–Ω—ã—Ö
export interface VideoFrames {
  frameList: VideoFrame[];
  music: string; // –ø—É—Ç—å –∫ –∞—É–¥–∏–æ —Ñ–∞–π–ª—É
  selectedFrame: number; // –∏–Ω–¥–µ–∫—Å –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–∞–¥—Ä–∞
  totalDuration: number; // –æ–±—â–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
  screenWidth: number; // —à–∏—Ä–∏–Ω–∞ –≤–∏–¥–µ–æ (720, 1280, 500)
  screenHeight: number; // –≤—ã—Å–æ—Ç–∞ –≤–∏–¥–µ–æ (1280, 720, 500)
}

// üé≠ –¢–∏–ø –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
interface VideoFrameContextType {
  videoFrames: VideoFrames | null;
  setVideoFrames: React.Dispatch<React.SetStateAction<VideoFrames | null>>;
  updateFrame: (frameIndex: number, updatedFrame: Partial<VideoFrame>) => void;
  addFrame: (frame: VideoFrame) => void;
  removeFrame: (frameIndex: number) => void;
  selectFrame: (frameIndex: number) => void;
  updateVideoSettings: (
    settings: Partial<Omit<VideoFrames, "frameList">>
  ) => void;
}

// üé™ –°–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
const VideoFrameContext = createContext<VideoFrameContextType | undefined>(
  undefined
);

// üé¨ –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤–∏–¥–µ–æ
const defaultVideoFrames: VideoFrames = {
  frameList: [
    {
      animation: "fadeIn",
      bgColor: "#007AFF",
      duration: 1,
      fontFamily: "Outfit",
      fontSize: 48,
      image: "/footage.png",
      sticker: "https://fonts.gstatic.com/s/e/notoemoji/latest/1f389/512.gif",
      stickerSize: 100,
      text: "–ù–û–í–ê–Ø –ú–û–î–ï–õ–¨",
      textColor: "rgba(255,255,255,1)",
    },
    {
      animation: "slideUp",
      bgColor: "#FFD700",
      duration: 1.5,
      fontFamily: "Bungee",
      fontSize: 36,
      image: "/footage.png",
      sticker: "https://fonts.gstatic.com/s/e/notoemoji/latest/270f/512.gif",
      stickerSize: 80,
      text: "GEMINI 2.0",
      textColor: "rgba(0,0,0,1)",
    },
    {
      animation: "zoomIn",
      bgColor: "linear-gradient(to right, #FF0000, #FFFF00)",
      duration: 1,
      fontFamily: "Anton",
      fontSize: 42,
      image: "/footage.png",
      sticker: "https://fonts.gstatic.com/s/e/notoemoji/latest/1f4af/512.gif",
      stickerSize: 70,
      text: "–ò–ù–ù–û–í–ê–¶–ò–Ø",
      textColor: "rgba(255,0,0,1)",
    },
    {
      animation: "slideRight",
      bgColor: "#00FF00",
      duration: 1,
      fontFamily: "Rowdies",
      fontSize: 30,
      image: "/footage.png",
      sticker: "https://fonts.gstatic.com/s/e/notoemoji/latest/1f3a5/512.gif",
      stickerSize: 90,
      text: "–ë–£–î–£–©–ï–ï",
      textColor: "rgba(0,255,0,1)",
    },
    {
      animation: "slideRight",
      bgColor: "#8B4513",
      duration: 1,
      fontFamily: "Outfit",
      fontSize: 30,
      image: "/footage.png",
      sticker: "https://fonts.gstatic.com/s/e/notoemoji/latest/1f3a5/512.gif",
      stickerSize: 90,
      text: "–£–ñ–ï –ó–î–ï–°–¨",
      textColor: "rgba(0,0,255,1)",
    },
    {
      animation: "slideRight",
      bgColor: "linear-gradient(to bottom, #FF0000, #0000FF)",
      duration: 3.5,
      fontFamily: "Bungee",
      fontSize: 40,
      image: "/footage.png",
      sticker: "https://fonts.gstatic.com/s/e/notoemoji/latest/1f3a5/512.gif",
      stickerSize: 90,
      text: "–ù–û–í–ê–Ø –≠–†–ê",
      textColor: "rgba(255,140,0,1)",
    },
  ],
  music: "test-assets/news.mp3",
  selectedFrame: 0,
  totalDuration: 9,
  screenWidth: 720,
  screenHeight: 1280,
};

// üé≠ –ü—Ä–æ–≤–∞–π–¥–µ—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
export function VideoFrameProvider({ children }: { children: ReactNode }) {
  const [videoFrames, setVideoFrames] = useState<VideoFrames | null>(
    defaultVideoFrames
  );

  // üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –∫–∞–¥—Ä–∞
  const updateFrame = (
    frameIndex: number,
    updatedFrame: Partial<VideoFrame>
  ) => {
    setVideoFrames((prev) => {
      if (!prev) return prev;

      const newFrameList = [...prev.frameList];
      newFrameList[frameIndex] = {
        ...newFrameList[frameIndex],
        ...updatedFrame,
      };

      // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â—É—é –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
      const newTotalDuration = newFrameList.reduce(
        (sum, frame) => sum + frame.duration,
        0
      );

      return {
        ...prev,
        frameList: newFrameList,
        totalDuration: newTotalDuration,
      };
    });
  };

  // ‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–∞–¥—Ä–∞
  const addFrame = (frame: VideoFrame) => {
    setVideoFrames((prev) => {
      if (!prev) return prev;

      const newFrameList = [...prev.frameList, frame];
      const newTotalDuration = newFrameList.reduce(
        (sum, f) => sum + f.duration,
        0
      );

      return {
        ...prev,
        frameList: newFrameList,
        totalDuration: newTotalDuration,
      };
    });
  };

  // ‚ûñ –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞–¥—Ä–∞
  const removeFrame = (frameIndex: number) => {
    setVideoFrames((prev) => {
      if (!prev || prev.frameList.length <= 1) return prev; // –û—Å—Ç–∞–≤–ª—è–µ–º –º–∏–Ω–∏–º—É–º 1 –∫–∞–¥—Ä

      const newFrameList = prev.frameList.filter(
        (_, index) => index !== frameIndex
      );
      const newTotalDuration = newFrameList.reduce(
        (sum, frame) => sum + frame.duration,
        0
      );

      return {
        ...prev,
        frameList: newFrameList,
        totalDuration: newTotalDuration,
        selectedFrame: Math.min(prev.selectedFrame, newFrameList.length - 1),
      };
    });
  };

  // üëÜ –í—ã–±–æ—Ä –∫–∞–¥—Ä–∞
  const selectFrame = (frameIndex: number) => {
    setVideoFrames((prev) => {
      if (!prev) return prev;
      return { ...prev, selectedFrame: frameIndex };
    });
  };

  // ‚öôÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤–∏–¥–µ–æ
  const updateVideoSettings = (
    settings: Partial<Omit<VideoFrames, "frameList">>
  ) => {
    setVideoFrames((prev) => {
      if (!prev) return prev;
      return { ...prev, ...settings };
    });
  };

  const contextValue: VideoFrameContextType = {
    videoFrames,
    setVideoFrames,
    updateFrame,
    addFrame,
    removeFrame,
    selectFrame,
    updateVideoSettings,
  };

  return (
    <VideoFrameContext.Provider value={contextValue}>
      {children}
    </VideoFrameContext.Provider>
  );
}

// ü™ù –•—É–∫ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
export function useVideoFrame() {
  const context = useContext(VideoFrameContext);
  if (context === undefined) {
    throw new Error("useVideoFrame must be used within a VideoFrameProvider");
  }
  return context;
}

// üé¨ –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
export { VideoFrameContext };
