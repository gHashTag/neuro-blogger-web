// üé¨ Video Editor - –û–±—ä–µ–¥–∏–Ω—ë–Ω–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –≤–∏–¥–µ–æ
// –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –ª—É—á—à–µ–≥–æ UX –∏–∑ Promo-Video-Beta —Å –Ω–∞—à–µ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π

import React, { useState, useEffect } from "react";
import Head from "next/head";
import { VideoFrameProvider } from "../components/context/VideoFrameContext";
import { Button } from "../components/ui/button";
import { Badge } from "../components/ui/badge";
import {
  Tabs,
  TabsContent,
  TabsList,
  TabsTrigger,
} from "../components/ui/tabs";

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
import ExportButton from "../components/video-editor/ExportButton";
import TrackList from "../components/video-editor/TrackList";
import RemotionPlayer from "../components/video-editor/RemotionPlayer";
import FrameConfig from "../components/video-editor/FrameConfig";
import { AvatarCreationModal } from "../components/modal/AvatarCreationModal";
import { AvatarManager } from "../components/video-editor/AvatarManager";
import { HeyGenAvatarLibrary } from "../components/video-editor/HeyGenAvatarLibrary";

export default function VideoEditor() {
  const [activeTemplate, setActiveTemplate] = useState<
    "lipSync" | "promo" | "lottie"
  >("promo");

  // üé≠ Avatar Management State
  const [isAvatarModalOpen, setIsAvatarModalOpen] = useState(false);
  const [createdAvatars, setCreatedAvatars] = useState<any[]>([]);
  const [selectedAvatar, setSelectedAvatar] = useState<any>(null);
  const [currentVideoProps, setCurrentVideoProps] = useState<any>({});

  // üé≠ Avatar Creation Handler
  const handleAvatarCreated = (avatar: any) => {
    console.log("üé≠ New avatar created:", avatar);
    setCreatedAvatars((prev) => [...prev, avatar]);

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±–∏—Ä–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–π –∞–≤–∞—Ç–∞—Ä
    setSelectedAvatar(avatar);

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ lip-sync —à–∞–±–ª–æ–Ω –¥–ª—è –∞–≤–∞—Ç–∞—Ä–∞
    if (activeTemplate !== "lipSync") {
      setActiveTemplate("lipSync");
    }
  };

  // üé≠ Avatar Use Handler - –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≤–∏–¥–µ–æ —à–∞–±–ª–æ–Ω–æ–º
  const handleAvatarUse = (avatar: any) => {
    console.log("üé¨ Using avatar in video:", avatar);

    // –û–±–Ω–æ–≤–ª—è–µ–º props –¥–ª—è Remotion —à–∞–±–ª–æ–Ω–∞
    const newVideoProps = {
      ...currentVideoProps,
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º avatar –¥–∞–Ω–Ω—ã–µ –≤ lip-sync —à–∞–±–ª–æ–Ω–µ
      lipSyncVideo:
        avatar.remotion_props?.lipSyncVideo ||
        avatar.preview_video ||
        "/test-assets/lip-sync.mp4",
      avatarImageUrl: avatar.thumbnail,
      avatarName: avatar.name,
      avatarStyle: avatar.style,
    };

    setCurrentVideoProps(newVideoProps);
    setSelectedAvatar(avatar);

    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ lip-sync —à–∞–±–ª–æ–Ω
    if (activeTemplate !== "lipSync") {
      setActiveTemplate("lipSync");
    }

    console.log("‚úÖ Video props updated with avatar:", newVideoProps);
  };

  return (
    <>
      <Head>
        <title>Video Editor - –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ</title>
        <meta
          name="description"
          content="–ú–æ—â–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –≤–∏–¥–µ–æ —Å AI –∏ Remotion"
        />
      </Head>

      <VideoFrameProvider>
        <div className="min-h-screen bg-gray-50">
          {/* üìä Header */}
          <div className="bg-white border-b shadow-sm">
            <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
              <div className="flex justify-between items-center py-4">
                <div>
                  <h1 className="text-2xl font-bold text-gray-900">
                    üé¨ Video Editor
                  </h1>
                  <div className="flex items-center gap-2">
                    <p className="text-sm text-gray-500">
                      –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –≤–∏–¥–µ–æ
                    </p>
                    {selectedAvatar && (
                      <Badge variant="outline" className="text-xs">
                        üé≠ {selectedAvatar.name}
                      </Badge>
                    )}
                  </div>
                </div>

                {/* Template Selector */}
                <Tabs
                  value={activeTemplate}
                  onValueChange={(value: string) =>
                    setActiveTemplate(value as "lipSync" | "promo" | "lottie")
                  }
                >
                  <TabsList className="grid w-full grid-cols-3">
                    <TabsTrigger value="promo">üé≠ Promo Video</TabsTrigger>
                    <TabsTrigger value="lipSync">üé§ Lip Sync</TabsTrigger>
                    <TabsTrigger value="lottie">‚ú® Lottie</TabsTrigger>
                  </TabsList>
                </Tabs>

                {/* Actions */}
                <div className="flex gap-3">
                  <AvatarCreationModal
                    isOpen={isAvatarModalOpen}
                    onOpen={() => setIsAvatarModalOpen(true)}
                    onOpenChange={() => setIsAvatarModalOpen(false)}
                    onAvatarCreated={handleAvatarCreated}
                  />
                  <HeyGenAvatarLibrary onAvatarSelect={handleAvatarUse} />
                  {createdAvatars.length > 0 && (
                    <AvatarManager
                      avatars={createdAvatars}
                      selectedAvatar={selectedAvatar}
                      onAvatarSelect={setSelectedAvatar}
                      onAvatarUse={handleAvatarUse}
                    />
                  )}
                  <Button variant="outline">üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å</Button>
                  <ExportButton
                    activeTemplate={activeTemplate}
                    videoProps={currentVideoProps}
                    selectedAvatar={selectedAvatar}
                  />
                </div>
              </div>
            </div>
          </div>

          {/* üéõÔ∏è Main Editor Layout */}
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
            {/* Notice */}
            <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6">
              <div className="flex">
                <div className="flex-shrink-0">
                  <span className="text-blue-400 text-lg">‚ÑπÔ∏è</span>
                </div>
                <div className="ml-3">
                  <p className="text-sm text-blue-700">
                    <strong>–ù–æ–≤—ã–π –º–æ—â–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä!</strong> –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —à–∞–±–ª–æ–Ω–∞
                    –≤—ã—à–µ –∏ —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –≤–∏–¥–µ–æ —Å AI –∏ Remotion.
                  </p>
                </div>
              </div>
            </div>

            {/* Editor Grid Layout (–∞–Ω–∞–ª–æ–≥ –∏–∑ Promo-Video-Beta) */}
            <div className="grid grid-cols-6 gap-6">
              {/* üìã Left Panel - Track List */}
              <div className="col-span-1">
                <div className="bg-white rounded-lg shadow p-4">
                  <TrackList
                    activeTemplate={activeTemplate}
                    selectedAvatar={selectedAvatar}
                  />
                </div>
              </div>

              {/* üé• Center Panel - Video Player */}
              <div className="col-span-3">
                <div className="bg-white rounded-lg shadow p-4">
                  <h3 className="font-semibold text-gray-900 mb-3">
                    üé• –ü—Ä–µ–≤—å—é
                  </h3>
                  <RemotionPlayer
                    activeTemplate={activeTemplate}
                    videoProps={currentVideoProps}
                    selectedAvatar={selectedAvatar}
                  />
                </div>
              </div>

              {/* ‚öôÔ∏è Right Panel - Frame Configuration */}
              <div className="col-span-2">
                <div className="bg-white rounded-lg shadow p-4">
                  <FrameConfig
                    activeTemplate={activeTemplate}
                    videoProps={currentVideoProps}
                    onPropsChange={setCurrentVideoProps}
                    selectedAvatar={selectedAvatar}
                  />
                </div>
              </div>
            </div>

            {/* üìä Timeline (–±—É–¥—É—â–µ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ) */}
            <div className="mt-6 bg-white rounded-lg shadow p-4">
              <h3 className="font-semibold text-gray-900 mb-3">üìä Timeline</h3>
              <div className="h-20 bg-gray-100 rounded flex items-center justify-center">
                <span className="text-gray-500">
                  –í—Ä–µ–º–µ–Ω–Ω–∞—è —à–∫–∞–ª–∞ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)
                </span>
              </div>
            </div>
          </div>
        </div>
      </VideoFrameProvider>
    </>
  );
}
