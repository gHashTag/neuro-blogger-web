// üé¨ –¢–ï–°–¢–û–í–ê–Ø –°–¢–†–ê–ù–ò–¶–ê –î–õ–Ø –ü–†–û–í–ï–†–ö–ò –õ–ò–ü–°–ò–ù–ì–ê
import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';

interface TestLog {
  time: string;
  level: 'info' | 'success' | 'error' | 'warning';
  message: string;
}

export default function TestLipSyncPage() {
  const [logs, setLogs] = useState<TestLog[]>([]);
  const [isRendering, setIsRendering] = useState(false);
  const [videoUrl, setVideoUrl] = useState<string | null>(null);
  
  const addLog = (level: TestLog['level'], message: string) => {
    const log: TestLog = {
      time: new Date().toLocaleTimeString(),
      level,
      message
    };
    setLogs(prev => [...prev, log]);
    console.log(`[${level.toUpperCase()}] ${message}`);
  };

  // –ü–û–õ–ù–´–ô –¢–ï–°–¢ –ü–ê–ô–ü–õ–ê–ô–ù–ê - –°–û–ó–î–ê–ù–ò–ï –õ–ò–ü–°–ò–ù–ì–ê –° –ù–£–õ–Ø!
  const testFullPipeline = async () => {
    setIsRendering(true);
    setVideoUrl(null);
    setLogs([]);
    
    addLog('info', 'üöÄ –ó–ê–ü–£–°–ö –ü–û–õ–ù–û–ì–û –°–û–ó–î–ê–ù–ò–Ø –õ–ò–ü–°–ò–ù–ì–ê –° –ù–£–õ–Ø!');
    
    try {
      // –®–ê–ì 1: –°–û–ó–î–ê–ù–ò–ï –õ–ò–ü–°–ò–ù–ì –í–ò–î–ï–û
      addLog('info', 'üé§ –®–ê–ì 1: –°–æ–∑–¥–∞–Ω–∏–µ lip-sync –≤–∏–¥–µ–æ...');
      addLog('info', 'üìù –¢–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç: "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏–ø—Å–∏–Ω–≥–∞. –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ!"');
      
      const heygenCreateResponse = await fetch('/api/video/generate-real-working-lipsync', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          text: '–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏–ø—Å–∏–Ω–≥–∞. –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ! –†–∞–∑, –¥–≤–∞, —Ç—Ä–∏ - –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–≤—É–∫–∞ –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≥—É–±.'
        })
      });
      
      if (!heygenCreateResponse.ok) {
        const error = await heygenCreateResponse.text();
        throw new Error(`API error: ${error}`);
      }
      
      const heygenData = await heygenCreateResponse.json();
      
      if (!heygenData.video_url) {
        throw new Error('–ù–µ –≤–µ—Ä–Ω—É–ª URL –≤–∏–¥–µ–æ');
      }
      
      addLog('success', `‚úÖ –õ–ò–ü–°–ò–ù–ì –í–ò–î–ï–û –°–û–ó–î–ê–ù–û!`);
      addLog('info', `üÜî ID: ${heygenData.video_id}`);
      addLog('info', `üìπ –ù–æ–≤–æ–µ –≤–∏–¥–µ–æ: ${heygenData.video_url}`);
      addLog('info', `üé¨ –í–∏–¥–µ–æ —Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π –≥—É–± –≥–æ—Ç–æ–≤–æ!`);
      
      const videoUrl = heygenData.video_url;
      
      // –®–ê–ì 2: –†–ï–ù–î–ï–†–ò–ù–ì –° –®–ê–ë–õ–û–ù–û–ú
      addLog('info', 'üé® –®–ê–ì 2: –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ LipSyncTemplate...');
      addLog('info', 'üì¶ –î–æ–±–∞–≤–ª—è–µ–º —Ñ–æ–Ω–æ–≤—ã–µ –≤–∏–¥–µ–æ, –º—É–∑—ã–∫—É, —ç—Ñ—Ñ–µ–∫—Ç—ã...');
      
      const remotionResponse = await fetch('/api/video/unified-render', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          renderType: 'custom',
          lipSyncVideoUrl: videoUrl,  // –ü–µ—Ä–µ–¥–∞—ë–º –ù–û–í–û–ï —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≤–∏–¥–µ–æ!
          inputProps: {
            lipSyncVideo: videoUrl,  // –î–ª—è —à–∞–±–ª–æ–Ω–∞ Remotion
            coverImage: '/test-assets/cover01.png',
            backgroundMusic: '/test-assets/news.mp3',
            backgroundVideos: [
              '/test-assets/bg-video01.mp4',
              '/test-assets/bg-video02.mp4',
              '/test-assets/bg-video03.mp4',
              '/test-assets/bg-video04.mp4'
            ],
            musicVolume: 0.3,
            coverDuration: 2,
            vignetteStrength: 0.7,
            colorCorrection: 1.2
          }
        })
      });
      
      if (!remotionResponse.ok) {
        const error = await remotionResponse.text();
        throw new Error(`Remotion render error: ${error}`);
      }
      
      const remotionResult = await remotionResponse.json();
      
      if (remotionResult.success) {
        addLog('success', '‚úÖ –®–ê–ì 2 –ó–ê–í–ï–†–®–Å–ù: –®–∞–±–ª–æ–Ω –ø—Ä–∏–º–µ–Ω—ë–Ω!');
        addLog('info', `üìπ –§–∏–Ω–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ: ${remotionResult.videoUrl}`);
        addLog('info', `üìä –†–∞–∑–º–µ—Ä: ${remotionResult.fileSize} MB`);
        addLog('info', `‚è±Ô∏è –í—Ä–µ–º—è —Ä–µ–Ω–¥–µ—Ä–∞: ${remotionResult.duration} —Å–µ–∫`);
        setVideoUrl(remotionResult.videoUrl);
        
        // –®–ê–ì 3: –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–ê
        addLog('info', 'üîç –®–ê–ì 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –≤–∏–¥–µ–æ...');
        addLog('success', 'üéâ –ü–û–õ–ù–´–ô –ü–ê–ô–ü–õ–ê–ô–ù –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–Å–ù!');
        addLog('success', '‚úÖ –ö–∞–∂–¥—ã–π –∑–∞–ø—É—Å–∫ —Å–æ–∑–¥–∞—ë—Ç –ù–û–í–û–ï —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ!');
      } else {
        addLog('error', `‚ùå Remotion —Ä–µ–Ω–¥–µ—Ä –ø—Ä–æ–≤–∞–ª–∏–ª—Å—è: ${remotionResult.error}`);
      }
      
    } catch (error: any) {
      addLog('error', `‚ùå –û–®–ò–ë–ö–ê: ${error.message}`);
    } finally {
      setIsRendering(false);
    }
  };

  return (
    <div className="min-h-screen bg-black p-8">
      <div className="max-w-7xl mx-auto">
        <h1 className="text-4xl font-bold text-white mb-8">
          üé¨ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –õ–∏–ø—Å–∏–Ω–≥ –†–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
        </h1>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
          {/* –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
          <div className="space-y-6">
            <Card className="p-6 bg-gray-900 border-gray-800">
              <h2 className="text-xl font-semibold text-white mb-4">
                üéÆ –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
              </h2>
              
              <div className="space-y-4">
                <Button
                  onClick={testFullPipeline}
                  disabled={isRendering}
                  className="w-full bg-purple-600 hover:bg-purple-700"
                >
                  üöÄ –ü–û–õ–ù–´–ô –¢–ï–°–¢ - –°–û–ó–î–ê–ù–ò–ï –° –ù–£–õ–Ø
                </Button>
                
                <div className="text-gray-400 text-sm space-y-1">
                  <p>–ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏:</p>
                  <ol className="list-decimal list-inside space-y-1 ml-2">
                    <li>–ì–µ–Ω–µ—Ä–∞—Ü–∏—è TTS –∞—É–¥–∏–æ –∏–∑ —Ç–µ–∫—Å—Ç–∞</li>
                    <li>–ê–Ω–∞–ª–∏–∑ —Ñ–æ–Ω–µ–º –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã –≥—É–±</li>
                    <li>–°–æ–∑–¥–∞–Ω–∏–µ –ª–∏–ø—Å–∏–Ω–≥ –≤–∏–¥–µ–æ</li>
                    <li>–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ —Å —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏</li>
                    <li>–†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –≤–∏–¥–µ–æ</li>
                  </ol>
                </div>
              </div>
              
              {isRendering && (
                <div className="mt-4 text-center">
                  <div className="inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-white"></div>
                  <p className="text-white mt-2">–°–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–µ –≤–∏–¥–µ–æ...</p>
                </div>
              )}
            </Card>

            {/* –õ–æ–≥–∏ */}
            <Card className="p-6 bg-gray-900 border-gray-800">
              <h2 className="text-xl font-semibold text-white mb-4">
                üìã –õ–æ–≥–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
              </h2>
              
              <div className="bg-black rounded-lg p-4 h-96 overflow-y-auto font-mono text-sm">
                {logs.length === 0 ? (
                  <div className="text-gray-500">–õ–æ–≥–∏ –ø–æ—è–≤—è—Ç—Å—è –∑–¥–µ—Å—å...</div>
                ) : (
                  logs.map((log, index) => (
                    <div
                      key={index}
                      className={`mb-1 ${
                        log.level === 'error' ? 'text-red-400' :
                        log.level === 'success' ? 'text-green-400' :
                        log.level === 'warning' ? 'text-yellow-400' :
                        'text-gray-300'
                      }`}
                    >
                      [{log.time}] {log.message}
                    </div>
                  ))
                )}
              </div>
            </Card>
          </div>

          {/* –ü—Ä–µ–≤—å—é –≤–∏–¥–µ–æ */}
          <div className="space-y-6">
            <Card className="p-6 bg-gray-900 border-gray-800">
              <h2 className="text-xl font-semibold text-white mb-4">
                üìπ –†–µ–∑—É–ª—å—Ç–∞—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
              </h2>
              
              {videoUrl ? (
                <div className="space-y-4">
                  <video
                    id="test-video"
                    src={videoUrl}
                    controls
                    className="w-full rounded-lg"
                    style={{ maxHeight: '500px' }}
                  >
                    –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤–∏–¥–µ–æ
                  </video>
                  
                  <div className="text-white space-y-2">
                    <p>üìç URL: {videoUrl}</p>
                    <Button
                      onClick={() => window.open(videoUrl, '_blank')}
                      className="bg-gray-600 hover:bg-gray-700"
                    >
                      üîó –û—Ç–∫—Ä—ã—Ç—å –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ
                    </Button>
                  </div>
                </div>
              ) : (
                <div className="bg-black rounded-lg h-96 flex items-center justify-center">
                  <p className="text-gray-500">–í–∏–¥–µ–æ –ø–æ—è–≤–∏—Ç—Å—è –∑–¥–µ—Å—å –ø–æ—Å–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏</p>
                </div>
              )}
            </Card>

            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ü–µ—Å—Å–µ */}
            <Card className="p-6 bg-gray-900 border-gray-800">
              <h2 className="text-xl font-semibold text-white mb-4">
                üìñ –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç
              </h2>
              
              <div className="text-gray-300 space-y-3">
                <div>
                  <h3 className="font-bold text-white mb-1">üé§ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≥–æ–ª–æ—Å–∞ (TTS)</h3>
                  <p className="text-sm">–¢–µ–∫—Å—Ç –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç—Å—è –≤ –∞—É–¥–∏–æ —Å –ø–æ–º–æ—â—å—é –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π</p>
                </div>
                
                <div>
                  <h3 className="font-bold text-white mb-1">üëÑ –ê–Ω–∞–ª–∏–∑ —Ñ–æ–Ω–µ–º</h3>
                  <p className="text-sm">–ö–∞–∂–¥—ã–π –∑–≤—É–∫ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç—ã –¥–≤–∏–∂–µ–Ω–∏–π –≥—É–±</p>
                </div>
                
                <div>
                  <h3 className="font-bold text-white mb-1">üé¨ –°–æ–∑–¥–∞–Ω–∏–µ –ª–∏–ø—Å–∏–Ω–≥–∞</h3>
                  <p className="text-sm">–í–∏–¥–µ–æ —Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π –≥—É–± –ø–æ–¥ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∞—É–¥–∏–æ</p>
                </div>
                
                <div>
                  <h3 className="font-bold text-white mb-1">‚ú® –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤</h3>
                  <p className="text-sm">–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ–Ω–æ–≤, –º—É–∑—ã–∫–∏, –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ —á–µ—Ä–µ–∑ Remotion</p>
                </div>
                
                <div className="mt-4 p-3 bg-yellow-900/20 border border-yellow-600/50 rounded">
                  <p className="text-yellow-400 text-sm">
                    ‚ö†Ô∏è –≠—Ç–æ –¥–µ–º–æ-–≤–µ—Ä—Å–∏—è. –í –ø—Ä–æ–¥–∞–∫—à–Ω –≤–µ—Ä—Å–∏–∏ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è 
                    –Ω–∞—Å—Ç–æ—è—â–∞—è ML –º–æ–¥–µ–ª—å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ª–∏–ø—Å–∏–Ω–≥–∞.
                  </p>
                </div>
              </div>
            </Card>
          </div>
        </div>
      </div>
    </div>
  );
}
